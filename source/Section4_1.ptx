<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="section4_1-propositions-logic-operators"><title>Propositions and Logical Operators</title>
  <subsection xml:id="subsec4_1_1-propositions"><title>Propositions</title>
    <definition xml:id="def-proposition"><title>Proposition</title><idx>Proposition</idx><statement><p> A proposition is a sentence to which one and only one of the terms <em>true</em> or <em>false</em> can be meaningfully applied.</p></statement></definition>
    <example xml:id="some-propositions"><title>Some Propositions</title>
      <statement><p><q>Four is an even number</q>; <q>four is an odd number</q>; <q><m>4 \in  \{1,3, 5\}</m></q>; and <q><m>43 > 21</m></q> are propositions.</p></statement></example>

    <p>In traditional logic, a declarative statement with a definite truth value is considered a proposition. Although our ultimate aim is to discuss mathematical logic, we won't separate ourselves completely from the traditional setting. This is natural because the basic assumptions, or postulates, of mathematical logic are modeled after the logic we use in everyday life. </p>

    <p>Since compound sentences are frequently used in everyday speech, we expect that logical propositions contain connectives such as the words <q>and</q> and <q>or</q>. The statement <q>Europa supports life or Mars supports life</q> is a proposition and, hence, must have a definite truth value. Whatever that truth value is, it should be the same as the truth value of <q>Mars supports life or Europa supports life.</q></p>
  </subsection>
  <subsection xml:id="subsec4_1_2-logical-operations"><title>Logical Operations</title>
    <p>There are several ways in which we commonly combine simple statements into compound ones. The words/phrases <em>and</em>, <em>or</em>, <em>not</em>, <em>if ... then...</em>, and <em>...if and only if ...</em> can be added to one or more propositions to create a new proposition. To avoid any confusion, we will precisely define each one's meaning and introduce its standard symbol.</p>

    <p>With the exception of negation (<em>not</em>), all
    of the operations act on pairs of propositions. Since each proposition has two possible truth values, there are four ways that truth can be assigned to two propositions. In defining the effect that a logical operation has on two propositions, the result must be specified for all four cases. The most convenient way of doing this is with a <em>truth table</em>, which we will illustrate by defining the connective <em>and</em>.</p>

  <definition xml:id="def-conjunction"><title>Logical Conjunction (AND)</title><idx>Conjunction, Logical</idx>
    <notation>
      <usage><m>p \land q</m></usage><description> the conjunction, <m>p \textrm{ and } q</m>  </description>
    </notation>
    <statement><p> If <m>p</m> and <m>q</m> are propositions, their conjunction, <m>p \textrm{ and } q</m> (denoted <m>p \land q</m>), is defined by the truth table <me>
      \begin{array}{|c|c|c|}
      \hline
      p &amp; q &amp; p\land q \\
      \hline
      0 &amp; 0 &amp; 0 \\\hline
      0 &amp; 1 &amp; 0 \\\hline
      1 &amp; 0 &amp; 0 \\\hline
      1 &amp; 1 &amp; 1 \\\hline
      \end{array}
      </me>
      The statement <m>p \land q</m> is only true if both <m>p</m> and <m>q</m> are true.
      </p></statement>

  </definition>


  <p>Notes:</p>
  <p><ol marker="(a)">
    <li><p> To read this truth table, you must realize that any one line represents a case: one possible set of values for <m>p</m> and <m>q</m>.</p></li>
    <li><p>The numbers 0 and 1 are used to denote false and true, respectively. Sometimes you will see F and T instead. The use of 0 and 1  is consistent with the way that many programming languages treat logical, or <em>Boolean</em>, variables since a single bit, 0 or 1, can represent a truth value.</p></li>
    <li><p>For each case, the symbol under <m>p</m> represents the truth value of <m>p</m>. The same is true for <m>q</m>. The symbol under <m>p \land q</m> represents its truth value for that case. For example, the second row of the truth table represents the case in which <m>p</m> is false, <m>q</m> is true, and the resulting truth value for <m>p \land q</m> is false. As in everyday speech, <m>p \land q</m> is true only when both propositions are true.</p></li>
    <li><p>Just as the letters <m>x</m>, <m>y</m> and <m>z</m> are frequently used in algebra to represent numeric variables, <m>p</m>, <m>q</m> and <m>r</m> seem to be the most commonly used symbols for logical variables. When we say that <m>p</m> is a logical variable, we mean that any proposition can take the place of <m>p</m>.</p></li>
    <li><p>One final comment: The order in which we list the cases in truth table rows is standardized in this book. It is important to be consistent with the ordering so that all possible combinations are represented.</p>
        <ul>

          <li>There will always be <m>2^n</m> rows in a truth table with <m>n</m> propositions</li>
          <li>From top to bottom, the first column should have <m>\frac{1}{2}</m> of the rows as 0s followed by <m>\frac{1}{2}</m> of the rows as 1s. The second column should have <m>\frac{1}{4}</m> of the rows 0s followed by <m>\frac{1}{4}</m> of the rows 1s, then another <m>\frac{1}{4}</m> rows of 0s followed another <m>\frac{1}{4}</m> rows of 1s. The final column of simple propositions should have rows of alternating 0s and 1s.</li>
          <li><p>If the truth table involves two simple propositions, the numbers under the simple propositions can be interpreted as the two-digit binary integers in increasing order, 00, 01, 10, and 11, for 0, 1, 2, and 3, respectively.</p></li>
        </ul></li>
  </ol>
</p>

  <definition xml:id="def-disjunction"><title>Logical Disjunction (OR)</title><idx>Disjunction, Logical</idx><notation>
    <usage><m> p \lor q</m></usage><description> the disjunction, <m>p \textrm{ or } q</m>  </description>
    </notation><statement><p> If <m>p</m> and <m>q</m> are propositions, their disjunction, <m>p \textrm{ or } q</m> (denoted <m>p \lor q</m>), is defined by the truth table <me>
    \begin{array}{|c|c|c|}\hline
    p &amp; q &amp; p\lor q \\
    \hline
    0 &amp; 0 &amp; 0 \\\hline
    0 &amp; 1 &amp; 1 \\\hline
    1 &amp; 0 &amp; 1 \\\hline
    1 &amp; 1 &amp; 1 \\\hline
    \end{array}
    </me>
    The statement <m>p \lor q</m> is true if <m>p</m> or <m>q</m> or both are true.
    </p></statement>
  </definition>


  <definition xml:id="def-negation"><title>Logical Negation (NOT)</title><idx>Negation, Logical</idx><notation>
    <usage><m>\neg p</m></usage><description> the negation of <m>p</m>, <q>not <m>p</m></q>  </description>
    </notation><statement><p> If <m>p</m> is a proposition, its negation, <m>\textrm{not } p</m>,  denoted <m>\neg p</m>, and is defined by the truth table
    <me>\begin{array}{|c|c|} \hline
    p &amp; \neg p \\
    \hline
    0 &amp; 1 \\\hline
    1 &amp; 0 \\\hline
    \end{array}
    </me>
    The statement <m>\neg p</m> is true if <m>p</m> is false.
    </p></statement>

  </definition>
<p>Note: Negation is the only standard operator that acts on a single proposition; hence only two cases are needed.</p>

<p>Consider the following propositions from everyday speech:</p>
<p><ol marker="(a)"><li><p>I'm going to quit if I don't get a raise.</p></li>
<li><p>If I pass the final, then I'll graduate.</p></li>
<li><p>I'll be going to the movies provided that my car starts.</p></li>
</ol>
</p>
<p>All three propositions are conditional, they can all be restated to fit into the form  <q><em>If </em>Condition, <em>then</em> Conclusion.</q> For example, the first statement can be rewritten as <q><em>If </em> I don't get a raise, <em>then</em> I'm going to quit.</q></p>

<p>A conditional statement is meant to be interpreted as a guarantee; if the condition is true, then the conclusion is expected to be true. It says no more and no less.</p>


<definition xml:id="def-conditional"><title>Conditional Statement </title><idx>Conditional Statement</idx>
<notation><usage><m>p \to  q</m></usage>
<description>The conditional proposition If <m>p</m> then <m>q</m>.</description>
</notation>
<statement><p>The conditional statement <q>If <m>p</m> then <m>q</m>,</q> denoted <m>p \rightarrow  q</m>, is defined by the truth table:</p>
     <me>
    \begin{array}{|c|c|c|}\hline
    p &amp; q &amp; p \rightarrow q \\
    \hline
    0 &amp; 0 &amp; 1 \\\hline
    0 &amp; 1 &amp; 1 \\\hline
    1 &amp; 0 &amp; 0 \\\hline
    1 &amp; 1 &amp; 1 \\\hline
    \end{array}
    </me>
</statement>

</definition>

<example xml:id="conditional-analysis"><title>Analysis of a Conditional Proposition</title><p> Assume your instructor told you <q>If you receive a grade of 95 or better in the final examination, then you will receive
an A in this course.</q> Your instructor has made a promise to you. If you fulfill his condition, you expect the conclusion
(getting an A) to be forthcoming. Suppose your graded final has been returned to you. Has your instructor told the truth
or is your instructor guilty of a falsehood?</p>
<p>Case I: Your final exam score was less than 95 (the condition is false) and you did not receive an A (the conclusion is false). The instructor told the truth.</p>
<p>Case II: Your final exam score was less than 95, yet you received an A for the course. The instructor told the truth. (Perhaps your overall course average was excellent.) </p>
<p>Case III: Your final exam score was greater than 95, but you did not receive an A. The instructor lied.</p>
<p>Case IV: Your final exam score was greater than 95, and you received an A. The instructor told the truth.</p>
<p>To sum up, the only case in which a conditional proposition is false is when the condition is true and the conclusion is false.</p>
</example>

<p>The order of the condition and conclusion in a conditional proposition is important. If the condition and conclusion are exchanged, a different proposition is produced.</p>

<definition xml:id="def-converse"><title>Converse</title><idx>Converse</idx><statement><p> The converse of the proposition <m>p \rightarrow q</m> is the proposition <m>q \rightarrow p</m>.</p></statement></definition>

<p>The converse of <q>If you receive a grade of 95 or better in the final exam, then you will receive an A in this course,</q> is <q>If you receive an A in this course, then you received a grade of 95 or better in the final exam.</q> It should be clear that these two statements say different things.</p>
<p>There <em>is</em> a proposition related to <m>p \rightarrow q</m> that does have the same logical meaning.  This is the contrapositive.</p>

<definition xml:id="def-contrapositive"><title>Contrapositive</title><idx>Contrapositive</idx>
<statement><p> The contrapositive of the proposition <m>p \rightarrow q</m> is the proposition <m>\neg q \rightarrow \neg p</m>.</p></statement></definition>

<p>As we will see when we discuss logical proofs, we can prove a conditional proposition by proving it's contrapositive, which may be somewhat easier.</p>


<definition xml:id="def-biconditional"><title>Biconditional Proposition</title><idx>Biconditional Proposition</idx>
<notation>
<usage><m> p \leftrightarrow q</m></usage><description> The biconditional proposition <m>p</m>
if and only if <m>q</m>  </description>
</notation><statement><p>If <m>p</m> and <m>q</m> are propositions, the biconditional statement <q><m>p</m>
if and only if <m>q</m>,</q> denoted <m>p \leftrightarrow q</m>, is defined by the truth table
<me>
\begin{array}{|c|c|c|} \hline
 p &amp; q &amp; p\leftrightarrow q \\
 \hline
 0 &amp; 0 &amp; 1 \\ \hline
 0 &amp; 1 &amp; 0 \\ \hline
 1 &amp; 0 &amp; 0 \\ \hline
 1 &amp; 1 &amp; 1 \\ \hline
\end{array}
</me>
</p></statement>

</definition>
<p>Note that <m>p \leftrightarrow q</m> is true when <m>p</m> and <m>q</m> have the same truth values. It is common to abbreviate <q>if and only if</q> to <q>iff.</q></p>

<!-- changed to list element, students can't find for hw otherwise -->
<list xml:id="list-conditional-forms"><title>Conditional Alternative Forms</title>
	<introduction><p>Although <q>if ... then...</q> and <q> ...if and only if ...</q> are frequently used in everyday speech,
 there are several alternate forms that you should be aware of. They are summarized in the following lists.</p>
 <p>All of the following are equivalent to <q>If <m>p</m> then <m>q</m></q>:</p></introduction>
<ul>
<li><p><m>p</m> implies <m>q</m>.</p></li>
<li><p><m>q</m> follows from <m>p</m>.</p></li>
<li><p><m>p</m>, only if <m>q</m>.</p></li>
<li><p><m>q</m> if <m>p</m>.</p></li>
<li><p>if <m>p</m>, <m>q</m>.</p></li>
<li><p><m>q</m> whenever <m>p</m>.</p></li>
<li><p><m>q</m> when <m>p</m>.</p></li>
<li><p><m>q</m> unless <m>\neg p</m>.</p></li>
<li><p><m>p</m> is sufficient for <m>q</m>.</p></li>
<li><p>a sufficient condition for <m>q</m> is <m>p</m>.</p></li>
<li><p><m>q</m> is necessary for <m>p</m>.</p></li>
<li><p>a necessary condition for <m>p</m> is <m>q</m>.</p></li>
</ul>
</list>

<list xml:id="list-biconditional-forms"><title>Biconditional Alternative Forms</title>
	<introduction>
		<p>All of the following are equivalent to <q><m>p</m> if and only if <m>q</m></q>:</p></introduction>

<ul>
<li><p><m>p</m> is necessary and sufficient for <m>q</m>.</p></li>
<li><p><m>p</m> is equivalent to <m>q</m>.</p></li>
<li><p>If <m>p</m>, then <m>q</m>, and if <m>q</m>, then <m>p</m>.</p></li>
<li><p>If <m>p</m>, then <m>q</m> and conversely.</p></li>
</ul>

</list>
</subsection>
<exercises xml:id="exercises-4-1">
<title>Exercises for Section 4.1 </title>

<exercise number="1">
<statement><p>Let <m>d</m> = <q>I like discrete structures</q>, <m>c</m> = <q>I will pass this course</q> and <m>s</m> = <q>I will do my assignments.</q>  Express each of the following propositions in symbolic form:</p>
<p><ol marker="(a)">
<li><p>I like discrete structures and I will pass this course.</p></li>
<li><p>I will do my assignments or I will not pass this course.</p></li>
<li><p>It is not true that I both like discrete structures, and will do my assignments.</p></li>
<li><p>I will not do my assignment and I will not pass this course.</p></li>
</ol></p>
</statement>
<answer><p><ol marker="(a)" cols="2">
<li> <m>d\land c</m></li>
<li> <m>s\lor \neg c</m></li>
<li> <m>\neg (d\land s)</m> </li>
<li> <m>\neg s\land \neg c</m></li>
</ol></p>
</answer>
</exercise>
<exercise number="2">
<statement><p>
For each of the following propositions, identify simple propositions, express the compound proposition in symbolic form, and determine whether it is true or false:</p>
<p><ol marker="(a)">
<li><p>The world is flat or zero is an even integer.</p></li>
<li><p>If 432,802 is a multiple of 4, then 432,802 is even.</p></li>
<li><p>5 is a prime number and 6 is not divisible by 4. </p></li>
<li><p><m>3 \in \mathbb{Z}</m> and <m>3 \in  \mathbb{Q}</m>.</p></li>
<li><p><m>2/3 \in  \mathbb{Z}</m> and <m>2/3 \in  \mathbb{Q}</m>.</p></li>
<li><p>The sum of two even integers is even and the sum of two odd integers is odd.</p></li>
</ol></p>
</statement>

</exercise>
<exercise number="3">
<statement><p>Let <m>p =</m><q><m> 2 \leq 5</m></q>, <m>q</m> = <q>8 is an even integer,</q> and <m>r</m> = <q>11 is a prime number.</q> Express the following as a statement in English and determine whether the statement is true or false:</p>
<p><ol marker="(a)" cols="2">
<li><p> <m>\neg  p \land  q</m> </p></li>
<li><p> <m>p\rightarrow q</m></p></li>
<li><p> <m>(p \land q)\to r</m> </p></li>
<li><p> <m>p \rightarrow (q \lor  (\neg r))</m></p></li>
<li><p> <m>p \rightarrow ((\neg q)\lor  (\neg r))</m></p></li>
<li><p> <m>(\neg q) \rightarrow  (\neg p)</m></p></li>
</ol></p>
</statement>
<answer><p><ol marker="(a)"><li> <m>2>5</m> and 8 is an even integer. False.</li>
<li> If <m>2\leqslant 5</m> then 8 is an even integer. True.</li>
<li> If <m>2\leqslant 5</m> and 8 is an even integer then 11 is a prime number. True.</li>
<li> If <m>2\leqslant 5</m> then either 8 is an even integer or 11 is not a prime number. True.</li>
<li> If <m>2\leqslant 5</m> then either 8 is an odd integer or 11 is not a prime number. False.</li>
<li>If 8 is not an even integer then <m>2>5</m>. True.</li>
</ol></p>
</answer></exercise>

<exercise number="4">
<statement><p>Rewrite each of the following statements in symbolic form. Make sure you define the propositional variables:</p>
<p><ol marker="(a)">
<li><p>If an integer is a multiple of 4, then it is even.</p></li>
<li><p>The fact that a polygon is a square is a sufficient condition that it is a rectangle.</p></li>
<li><p>If <m>x = 5</m>, then <m>x^2=25</m>.</p></li>
<li><p>If <m>x^2 - 5x + 6 = 0</m>, then <m>x = 2</m> or <m>x = 3</m>.</p></li>
<li><p> <m>x^2=y^2</m> is a necessary condition for <m>x = y</m>. </p></li>
</ol></p>
</statement>
</exercise>
<exercise number="5">
<statement><p>Write the converse of the propositions in exercise 4. Compare the truth of each proposition and its converse.
</p></statement>
<answer><p> Only the converse of <m>d</m> is true.</p></answer>
</exercise>

</exercises>

</section>
