<?xml version="1.0" encoding="UTF-8"?>
<!-- MBX -->
<section xml:id="s-finite-boolean-algebras-ntuples">
<title>Finite Boolean Algebras as <m>n</m>-tuples of 0's and 1's</title>

<p>From the previous section we know that all finite Boolean algebras are of order <m>2^n</m>, where <m>n</m> is the number of atoms in the algebra.
We can therefore completely describe every finite Boolean algebra by the algebra of power sets. Is there a more convenient, or at least an alternate
way, of defining finite Boolean algebras? In Chapter 11 we found that we could produce new groups by taking Cartesian products of previously known
groups. We imitate this process for Boolean algebras.</p>



<p>The simplest nontrivial Boolean algebra is the Boolean algebra on the set <m>B_2=\{0, 1\}</m>. The ordering on <m>B_2</m> is the natural one, <m>0 \leq
0, 0\leq 1, 1\leq 1</m>. If we treat 0 and 1 as the truth values <q>false</q> and <q>true,</q> respectively, we see that the Boolean operations <m>\lor (\textrm{join})</m> and <m>\land (\textrm{meet})</m> are nothing more than the logical operation  with the same symbols.  The Boolean operation, <m>-</m>, (complementation) is the logical <m>\neg</m> (negation). In fact, this is why these symbols were chosen as the names of the Boolean operations. The operation tables for <m>\left[B_2;\lor ,\land, - \right]</m> are simply those of <q>or,</q> <q>and,</q> and <q>not,</q> which we repeat here.
<me>
\begin{array}{lcr}
		\begin{array}{c|cc}
		 \lor  &amp; 0 &amp; 1 \\
		\hline
		 0 &amp; 0 &amp; 1 \\
		 1 &amp; 1 &amp; 1 \\
		\end{array}
	 &amp;
		\begin{array}{c|cc}
		 \land  &amp; 0 &amp; 1 \\
		\hline
		 0 &amp; 0 &amp; 0 \\
		 1 &amp; 0 &amp; 1 \\
		\end{array}
	 &amp;
	 	\begin{array}{c|c}
 		u &amp; \overset{-}{u} \\
		\hline
 		0 &amp; 1 \\
 		1 &amp; 0 \\
		\end{array}
\end{array}
</me>
</p>

<p>By <xref ref="theorem-boolean-set-isomorphism" text="type-global" /> and its corollaries, all Boolean algebras of order 2 are isomorphic to this one.</p>



<p>We know that if we form <m>B_2\times B_2=B_2^2</m> we obtain the set <m>\{(0, 0), (0, 1), (1, 0), (1, 1)\}</m>, a set of order 4. We define operations
on <m>B_2^2</m> the natural way, namely componentwise, so that <m>(0, 1)\lor (1, 1)=(0\lor 1, 1\lor 1)=(1, 1)</m>,
 <m>(0, 1)\land (1, 1)=(0\land 1, 1\land 1)=(0, 1)</m> and <m>\overline{(0, 1)} = \left(\bar{0}, \bar{1}\right)=(1, 0)</m>. We claim that <m>B_2^2</m> is a Boolean algebra under the componentwise operations. Hence, <m>\left[B_2^2; \lor , \land, \bar{}\hspace{3 pt}\right]</m> is a Boolean algebra of order 4. Since all Boolean algebras of order 4 are isomorphic to one other, we have found a simple way of describing all Boolean algebras of order 4.</p>

<p>It is quite clear that we can describe any Boolean algebra of order 8 by considering <m>B_2\times B_2\times B_2=B_2^3</m> and, more generally, any Boolean algebra of order <m>2^n</m> with <m>B_2^n=B_2\times B_2\times \cdots \times B_2</m>  (<m>n</m> factors).</p>

<!--
<definition xml:id="def-Minset"><title>Minset</title><idx>Minset</idx>
<statement><p>Let <m>\{B_1, B_2,\ldots,B_n\}</m> be a set of subsets of  set <m>A</m>. Sets of the form <m>D_1\cap D_2\cap
\cdots \cap D_n</m>, where each <m>D_i</m> may be either <m>B_i</m> or <m>B_i^c</m>, is called a minset generated by <m>B_1</m>, <m>B_2</m>,... and  <m>B_n</m>.</p></statement></definition>
 -->

<exercises xml:id="exercises-12-5">
<title>Exercises</title>
<exercise number="1"><statement><p><ol label="(a)">
<li><p>Write out the operation tables for <m>\left[B_2^2; \lor , \land, - \right].</m></p></li>
<li><p> Draw the Hasse diagram for <m>\left[B_2^2; \lor , \land, - \right]</m> and compare your results with  <xref ref="subsets_2_hasse" text="type-global"/>.</p></li>
<li><p> Find the atoms of this Boolean algebra.</p></li>
</ol></p>
</statement>
<answer><p>
<ol label="(a)">
<li><p>
<me>
\begin{array}{lc}
			\begin{array}{c|cccc}
			\lor &amp; (0,0) &amp; (0,1) &amp; (1,0) &amp; (1,1) \\
			\hline
			(0,0) &amp; (0,0) &amp; (0,1) &amp; (1,0) &amp; (1,1) \\
			(0,1) &amp;(0,1) &amp; (0,1) &amp; (1,1) &amp; (1,1) \\
			(1,0) &amp; (1,0) &amp; (1,1) &amp; (1,0) &amp; (1,1) \\
			(1,1) &amp; (1,1) &amp; (1,1) &amp; (1,1) &amp; (1,1) \\
			\end{array}
 &amp;\\
		 \begin{array}{c|cccc}
		\land &amp; (0,0) &amp; (0,1) &amp; (1,0) &amp; (1,1) \\
		\hline
		 (0,0) &amp;(0,0) &amp; (0,0) &amp; (0,0) &amp; (0,0) \\
		 (0,1) &amp;(0,0) &amp; (0,1) &amp; (0,0) &amp; (0,1) \\
		 (1,0) &amp;(0,0) &amp; (0,0) &amp; (1,0) &amp; (1,0) \\
		 (1,1) &amp;(0,0) &amp; (0,1) &amp; (1,0) &amp; (1,1) \\
		\end{array}
&amp;
	\begin{array}{c|c}
 u &amp; \overset{\pmb{\_}}{u} \\
\hline
(0,0) &amp; (1,1) \\
 (0,1) &amp;(1,0) \\
 (1,0) &amp;(0,1) \\
 (1,1) &amp;(0,0) \\
\end{array}
 \\
\end{array}</me></p></li>
<li><p>  The graphs are isomorphic.</p></li>
<li><p>  (0, 1) and (1,0)</p></li>
</ol>
</p></answer></exercise>
<exercise number="2"><statement><p><ol label="(a)">
<li><p> Write out the operation tables for <m>\left[B_2^3; \lor , \land, - \right].</m></p></li>
<li><p> Draw the Hasse diagram for <m>\left[B_2^3; \lor , \land , - \right]</m></p></li>
</ol></p>
</statement></exercise>
<exercise number="3"><statement><p><ol label="(a)">
<li><p>List all atoms of <m>B_2^4</m>.</p></li>
<li><p>Describe the atoms of <m>B_2^n, n \geq 1</m>.</p></li>
</ol></p>
</statement>
<answer><p>
<ol label="(a)">
<li><p> <m>(1, 0, 0, 0)</m>, <m>(0, 1, 0, 0)</m>, <m>(0, 0, 1, 0)</m>, and <m>(0, 0, 0, 1)</m> are the atoms. </p></li>
<li><p> The <m>n</m>-tuples of bits with exactly one 1.</p></li>
</ol></p>
</answer>
</exercise>
<exercise number="4"><statement><p><xref ref="theorem-boolean-set-isomorphism" text="type-global" /> tells us we can think of any finite Boolean algebra in terms of sets. In Chapter 4,  we defined  <xref ref="def-Minset">minsets</xref> and <xref ref="def-minset-normal-form">minset normal form</xref>.  Rephrase these definitions in the language of Boolean algebra. The generalization of minsets are called <term>minterms</term>.</p>
</statement></exercise>
</exercises>
</section>
